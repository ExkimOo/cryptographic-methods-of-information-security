# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'desWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog
import docx
import fitz
from striprtf.striprtf import rtf_to_text

from cyphers.des_cypher import DES as Des


class Ui_DES(object):
    def setupUi(self, DES):
        DES.setObjectName("DES")
        DES.resize(753, 579)
        self.layoutWidget = QtWidgets.QWidget(DES)
        self.layoutWidget.setGeometry(QtCore.QRect(30, 20, 691, 541))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.cypherName = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.cypherName.setFont(font)
        self.cypherName.setAlignment(QtCore.Qt.AlignCenter)
        self.cypherName.setObjectName("cypherName")
        self.verticalLayout.addWidget(self.cypherName)
        self.input = QtWidgets.QTextEdit(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.input.setFont(font)
        self.input.setObjectName("input")
        self.verticalLayout.addWidget(self.input)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.key = QtWidgets.QLineEdit(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.key.setFont(font)
        self.key.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.key.setText("")
        self.key.setObjectName("key")
        self.horizontalLayout_3.addWidget(self.key)
        self.initVect = QtWidgets.QLineEdit(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.initVect.setFont(font)
        self.initVect.setObjectName("initVect")
        self.horizontalLayout_3.addWidget(self.initVect)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.encrypt = QtWidgets.QPushButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.encrypt.setFont(font)
        self.encrypt.setObjectName("encrypt")
        self.horizontalLayout_2.addWidget(self.encrypt)
        self.decrypt = QtWidgets.QPushButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.decrypt.setFont(font)
        self.decrypt.setObjectName("decrypt")
        self.horizontalLayout_2.addWidget(self.decrypt)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.read = QtWidgets.QPushButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.read.setFont(font)
        self.read.setObjectName("read")
        self.horizontalLayout.addWidget(self.read)
        self.write = QtWidgets.QPushButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.write.setFont(font)
        self.write.setObjectName("write")
        self.horizontalLayout.addWidget(self.write)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.horizontalLayout_4.addLayout(self.verticalLayout_2)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_2 = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_3.addWidget(self.label_2)
        self.mode = QtWidgets.QComboBox(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.mode.setFont(font)
        self.mode.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.mode.setObjectName("mode")
        self.mode.addItem("")
        self.mode.addItem("")
        self.mode.addItem("")
        self.mode.addItem("")
        self.verticalLayout_3.addWidget(self.mode)
        self.horizontalLayout_4.addLayout(self.verticalLayout_3)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.output = QtWidgets.QTextEdit(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.output.setFont(font)
        self.output.setReadOnly(True)
        self.output.setObjectName("output")
        self.verticalLayout.addWidget(self.output)

        self.retranslateUi(DES)
        QtCore.QMetaObject.connectSlotsByName(DES)

        self.des = Des()
        self.textFromFile = None
        self.textToFile = None

        self.initVect.hide()
        self.key.setText('DESkey56')

        self.encrypt.clicked.connect(self.encryptText)
        self.decrypt.clicked.connect(self.decryptText)
        self.mode.currentTextChanged.connect(self.toggleInitVect)

        self.read.clicked.connect(self.readFromFile)
        self.write.clicked.connect(self.writeToFile)

    def encryptText(self):
        encrypted_text = ''
        text = ''

        if self.textFromFile is None:
            text = self.input.toPlainText()
        else:
            text = self.textFromFile

        if self.mode.currentText() == 'ECB':
            encrypted_text = self.des.ECB(text, self.key.text(), 'enc')
        elif self.mode.currentText() == 'CBC':
            encrypted_text = self.des.CBC(text, self.key.text(), self.initVect.text(), 'enc')
        elif self.mode.currentText() == 'CFB':
            encrypted_text = self.des.CFB(text, self.key.text(), self.initVect.text(), 'enc')
        elif self.mode.currentText() == 'OFB':
            encrypted_text = self.des.OFB(text, self.key.text(), self.initVect.text(), 'enc')

        self.output.setText(encrypted_text)
        self.textFromFile = None
        self.textToFile = encrypted_text

    def decryptText(self):
        decrypted_text = ''
        text = ''

        if self.textFromFile is None:
            text = self.input.toPlainText()
        else:
            text = self.textFromFile

        if self.mode.currentText() == 'ECB':
            decrypted_text = self.des.ECB(text, self.key.text(), 'dec')
        elif self.mode.currentText() == 'CBC':
            decrypted_text = self.des.CBC(text, self.key.text(), self.initVect.text(), 'dec')
        elif self.mode.currentText() == 'CFB':
            decrypted_text = self.des.CFB(text, self.key.text(), self.initVect.text(), 'dec')
        elif self.mode.currentText() == 'OFB':
            decrypted_text = self.des.OFB(text, self.key.text(), self.initVect.text(), 'dec')

        self.output.setText(decrypted_text)
        self.textFromFile = None
        self.textToFile = decrypted_text

    def readFromFile(self):
        path = QFileDialog.getOpenFileName()[0]
        extension = path.split('/')[-1].split('.')[-1]

        if extension == 'txt':
            with open(path, 'r', encoding='koi8-r') as file:
                text = file.read()
                self.input.setText(text)
                self.textFromFile = text

        elif extension == 'docx':
            doc = docx.Document(path)
            text = []
            for para in doc.paragraphs:
                text.append(para.text)
            self.input.setText(''.join(text))

        elif extension == 'rtf':
            with open(path, 'r', encoding='koi8-r') as file:
                content = file.read()
                self.input.setText(rtf_to_text(content))
                self.textFromFile = rtf_to_text(content)

        elif extension == 'pdf':
            with fitz.open(path) as file:
                text = ''
                for page in file:
                    text += page.get_text()
                self.input.setText(rtf_to_text(text))

    def writeToFile(self):
        path = QFileDialog.getOpenFileName()[0]
        with open(path, 'w+', encoding='koi8-r') as file:
            text = ''

            if self.textToFile is None:
                text = self.input.toPlainText()
            else:
                text = self.textToFile

            file.write(text)

        self.textToFile = None

    def toggleInitVect(self):
        if self.mode.currentText() == 'ECB':
            self.initVect.hide()
        else:
            self.initVect.show()

    def retranslateUi(self, DES):
        _translate = QtCore.QCoreApplication.translate
        DES.setWindowTitle(_translate("DES", "DES"))
        self.cypherName.setText(_translate("DES", "Data Encryption Standard"))
        self.key.setPlaceholderText(_translate("DES", "Ключ (8 символов)"))
        self.initVect.setPlaceholderText(_translate("DES", "Вектор инициализации (8 символов)"))
        self.encrypt.setText(_translate("DES", "Зашифровать"))
        self.decrypt.setText(_translate("DES", "Расшифровать"))
        self.read.setText(_translate("DES", "Открыть файл"))
        self.write.setText(_translate("DES", "Записать в файл"))
        self.label_2.setText(_translate("DES", "Режим шифрования:"))
        self.mode.setItemText(0, _translate("DES", "ECB"))
        self.mode.setItemText(1, _translate("DES", "CBC"))
        self.mode.setItemText(2, _translate("DES", "CFB"))
        self.mode.setItemText(3, _translate("DES", "OFB"))
