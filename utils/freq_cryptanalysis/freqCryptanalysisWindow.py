# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'freqCryptanalysisWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QTableWidgetItem, QVBoxLayout

import pyqtgraph as pg
import numpy as np

from constants.constants import RUS_LETTERS, ENG_LETTERS
from utils.freq_cryptanalysis.freq_cryptanalysis import count_freq


class Ui_FrequencyCryptanalysis(object):
    def setupUi(self, FrequencyCryptanalysis):
        FrequencyCryptanalysis.setObjectName("FrequencyCryptanalysis")
        FrequencyCryptanalysis.resize(1030, 700)
        self.layoutWidget = QtWidgets.QWidget(FrequencyCryptanalysis)
        self.layoutWidget.setGeometry(QtCore.QRect(30, 239, 891, 441))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.input = QtWidgets.QTextEdit(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.input.setFont(font)
        self.input.setObjectName("input")
        self.verticalLayout.addWidget(self.input)
        self.output = QtWidgets.QTextEdit(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.output.setFont(font)
        self.output.setObjectName("output")
        self.verticalLayout.addWidget(self.output)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.analyze = QtWidgets.QPushButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.analyze.setFont(font)
        self.analyze.setObjectName("analyze")
        self.horizontalLayout.addWidget(self.analyze)
        self.decypher = QtWidgets.QPushButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.decypher.setFont(font)
        self.decypher.setObjectName("decypher")
        self.horizontalLayout.addWidget(self.decypher)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.lang = QtWidgets.QComboBox(self.layoutWidget)
        self.lang.setObjectName("lang")
        self.lang.addItem("")
        self.lang.addItem("")
        self.horizontalLayout.addWidget(self.lang)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.openFile = QtWidgets.QPushButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.openFile.setFont(font)
        self.openFile.setObjectName("openFile")
        self.verticalLayout.addWidget(self.openFile)
        self.letters = QtWidgets.QTableWidget(FrequencyCryptanalysis)
        self.letters.setGeometry(QtCore.QRect(930, 21, 91, 661))
        self.letters.setObjectName("letters")
        self.letters.setColumnCount(0)
        self.letters.setRowCount(0)
        self.plot = QtWidgets.QWidget(FrequencyCryptanalysis)
        self.plot.setGeometry(QtCore.QRect(28, 20, 891, 211))
        self.plot.setObjectName("plot")

        self.retranslateUi(FrequencyCryptanalysis)
        QtCore.QMetaObject.connectSlotsByName(FrequencyCryptanalysis)

        self.analyze.clicked.connect(self.analyzeText)
        self.openFile.clicked.connect(self.openDialogBox)
        self.decypher.clicked.connect(self.tryToDecypher)

    def setLetters(self, freq, exp_freq):
        n = len(freq)

        alphabet = ENG_LETTERS if self.lang.currentText() == 'ENG' else RUS_LETTERS
        shifted_alphabet = alphabet[np.argmax(exp_freq)-np.argmax(freq):] + alphabet[:np.argmax(exp_freq)-np.argmax(freq)]

        self.letters.setRowCount(n)
        self.letters.setColumnCount(2)

        self.letters.horizontalHeader().setDefaultSectionSize(40)
        self.letters.verticalHeader().setDefaultSectionSize(40)
        self.letters.horizontalHeader().hide()
        self.letters.verticalHeader().hide()

        for i in range(n):
            self.letters.setItem(i, 0, QTableWidgetItem(alphabet[i]))
            self.letters.setItem(i, 1, QTableWidgetItem(shifted_alphabet[i]))
            self.letters.item(i, 0).setTextAlignment(QtCore.Qt.AlignCenter)
            self.letters.item(i, 1).setTextAlignment(QtCore.Qt.AlignCenter)

    def analyzeText(self):
        self.output.setText('')

        lang = self.lang.currentText()
        freq, exp_freq = count_freq(self.input.toPlainText().upper(), lang)
        self.setLetters(freq, exp_freq)

        if lang == 'ENG':
            n = 26
            ticks = [list(zip(range(n), list(ENG_LETTERS)))]
        else:
            n = 33
            ticks = [list(zip(range(n), list(RUS_LETTERS)))]

        self.plotBar = pg.PlotWidget()


        self.plotBar.getAxis('bottom').setTicks(ticks)
        self.plotBar.addLegend(offset=(-125, -110))

        x = np.arange(n)
        self.bargraph_freq = pg.BarGraphItem(x=x - 0.25, height=freq * 100, width=0.3, brush='c', name='Частоты')
        self.bargraph_exp_freq = pg.BarGraphItem(x=x + 0.25, height=exp_freq * 100, width=0.3, brush='r', name='Ожидаемые частоты')
        self.plotBar.addItem(self.bargraph_freq)
        self.plotBar.addItem(self.bargraph_exp_freq)

        self.layout = QVBoxLayout(self.plot)
        self.layout.addWidget(self.plotBar)

        self.plot.setLayout(self.layout)

        self.plot.show()

    def tryToDecypher(self):
        x = []
        y = []
        for i in range(self.letters.rowCount()):
            x.append(self.letters.item(i, 0).text())
            y.append(self.letters.item(i, 1).text())

        table = dict(zip(x, y))
        text = self.input.toPlainText()
        table = text.maketrans(table)
        translated_text = text.translate(table)

        table = dict(zip(list(map(lambda x: x.lower(), x)), list(map(lambda x: x.lower(), y))))
        table = text.maketrans(table)
        translated_text = translated_text.translate(table)

        self.output.setText(translated_text)

    def openDialogBox(self):
        path = QFileDialog.getOpenFileName()[0]
        if path[-3:] == 'txt':
            with open(path, 'r', encoding='utf-8') as file:
                text = file.read()
                self.input.setText(text)

    def retranslateUi(self, FrequencyCryptanalysis):
        _translate = QtCore.QCoreApplication.translate
        FrequencyCryptanalysis.setWindowTitle(_translate("FrequencyCryptanalysis", "Frequency Cryptanalysis"))
        self.analyze.setText(_translate("FrequencyCryptanalysis", "Анализ"))
        self.decypher.setText(_translate("FrequencyCryptanalysis", "Дешифрование"))
        self.lang.setItemText(0, _translate("FrequencyCryptanalysis", "ENG"))
        self.lang.setItemText(1, _translate("FrequencyCryptanalysis", "RUS"))
        self.openFile.setText(_translate("FrequencyCryptanalysis", "Открыть файл"))
